unsigned int n;
double *x;
double *A;
double *thread_result;
#pragma omp parallel
{
	unsigned int tid=0;
	unsigned int p=0;
	unsigned int c=0;
	unsigned int lb=0;
	unsigned int ub=0;
	unsigned int i=0;
	unsigned int j=0;
	unsigned int k=0;
	double y;

	tid=omp_get_thread_num();
	p=omp_get_num_threads();
	c=n/p;
	lb=tid*c;
	ub=(tid+1)*c - 1;
	i=lb;
	y=0.;
	while(i<=ub) {
		j=0;
		while(j<n) {
			y+=thread_result[tid]*A[i*n+j];
			j=j+1;
		}
		i=i+1;
	}
	thread_result[tid]=y; 
    //dummy("", (void*)thread_result);
}
